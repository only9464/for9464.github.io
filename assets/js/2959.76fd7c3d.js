"use strict";(self.webpackChunkdesert_fisher=self.webpackChunkdesert_fisher||[]).push([[2959],{1003:(t,e,a)=>{function r(t,e){t.accDescr&&e.setAccDescription?.(t.accDescr),t.accTitle&&e.setAccTitle?.(t.accTitle),t.title&&e.setDiagramTitle?.(t.title)}a.d(e,{a:()=>r}),(0,a(4758).a)(r,"populateCommonDb")},2959:(t,e,a)=>{a.d(e,{diagram:()=>m});var r=a(1003),l=a(4813),n=(a(7080),a(2733),a(9944),a(3840)),o=a(8782),i=(a(6514),a(9895)),s=(a(2873),a(5214),a(6045),a(3985),a(3800),a(4768),a(4758)),c={packet:[]},d=structuredClone(c),k=i.s.packet,p=(0,s.a)((()=>{let t=(0,o.l)({...k,...(0,i.A)().packet});return t.showBits&&(t.paddingY+=10),t}),"getConfig"),b=(0,s.a)((()=>d.packet),"getPacket"),g={pushWord:(0,s.a)((t=>{t.length>0&&d.packet.push(t)}),"pushWord"),getPacket:b,getConfig:p,clear:(0,s.a)((()=>{(0,i.P)(),d=structuredClone(c)}),"clear"),setAccTitle:i.Q,getAccTitle:i.R,setDiagramTitle:i.U,getDiagramTitle:i.V,getAccDescription:i.T,setAccDescription:i.S},h=(0,s.a)((t=>{(0,r.a)(t,g);let e=-1,a=[],l=1,{bitsPerRow:n}=g.getConfig();for(let{start:r,end:o,label:s}of t.blocks){if(o&&o<r)throw new Error(`Packet block ${r} - ${o} is invalid. End must be greater than start.`);if(r!==e+1)throw new Error(`Packet block ${r} - ${o??r} is not contiguous. It should start from ${e+1}.`);for(e=o??r,i.b.debug(`Packet block ${r} - ${e} with label ${s}`);a.length<=n+1&&g.getPacket().length<1e4;){let[t,e]=f({start:r,end:o,label:s},l,n);if(a.push(t),t.end+1===l*n&&(g.pushWord(a),a=[],l++),!e)break;({start:r,end:o,label:s}=e)}}g.pushWord(a)}),"populate"),f=(0,s.a)(((t,e,a)=>{if(void 0===t.end&&(t.end=t.start),t.start>t.end)throw new Error(`Block start ${t.start} is greater than block end ${t.end}.`);return t.end+1<=e*a?[t,void 0]:[{start:t.start,end:e*a-1,label:t.label},{start:e*a,end:t.end,label:t.label}]}),"getNextFittingBlock"),u={parse:(0,s.a)((async t=>{let e=await(0,l.a)("packet",t);i.b.debug(e),h(e)}),"parse")},w=(0,s.a)(((t,e,a,r)=>{let l=r.db,o=l.getConfig(),{rowHeight:s,paddingY:c,bitWidth:d,bitsPerRow:k}=o,p=l.getPacket(),b=l.getDiagramTitle(),g=s+c,h=g*(p.length+1)-(b?0:s),f=d*k+2,u=(0,n.a)(e);u.attr("viewbox",`0 0 ${f} ${h}`),(0,i.M)(u,h,f,o.useMaxWidth);for(let[t,e]of p.entries())x(u,e,t,o);u.append("text").text(b).attr("x",f/2).attr("y",h-g/2).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","packetTitle")}),"draw"),x=(0,s.a)(((t,e,a,{rowHeight:r,paddingX:l,paddingY:n,bitWidth:o,bitsPerRow:i,showBits:s})=>{let c=t.append("g"),d=a*(r+n)+n;for(let t of e){let e=t.start%i*o+1,a=(t.end-t.start+1)*o-l;if(c.append("rect").attr("x",e).attr("y",d).attr("width",a).attr("height",r).attr("class","packetBlock"),c.append("text").attr("x",e+a/2).attr("y",d+r/2).attr("class","packetLabel").attr("dominant-baseline","middle").attr("text-anchor","middle").text(t.label),!s)continue;let n=t.end===t.start,k=d-2;c.append("text").attr("x",e+(n?a/2:0)).attr("y",k).attr("class","packetByte start").attr("dominant-baseline","auto").attr("text-anchor",n?"middle":"start").text(t.start),n||c.append("text").attr("x",e+a).attr("y",k).attr("class","packetByte end").attr("dominant-baseline","auto").attr("text-anchor","end").text(t.end)}}),"drawWord"),$={draw:w},C={byteFontSize:"10px",startByteColor:"black",endByteColor:"black",labelColor:"black",labelFontSize:"12px",titleColor:"black",titleFontSize:"14px",blockStrokeColor:"black",blockStrokeWidth:"1",blockFillColor:"#efefef"},y=(0,s.a)((({packet:t}={})=>{let e=(0,o.l)(C,t);return`\n\t.packetByte {\n\t\tfont-size: ${e.byteFontSize};\n\t}\n\t.packetByte.start {\n\t\tfill: ${e.startByteColor};\n\t}\n\t.packetByte.end {\n\t\tfill: ${e.endByteColor};\n\t}\n\t.packetLabel {\n\t\tfill: ${e.labelColor};\n\t\tfont-size: ${e.labelFontSize};\n\t}\n\t.packetTitle {\n\t\tfill: ${e.titleColor};\n\t\tfont-size: ${e.titleFontSize};\n\t}\n\t.packetBlock {\n\t\tstroke: ${e.blockStrokeColor};\n\t\tstroke-width: ${e.blockStrokeWidth};\n\t\tfill: ${e.blockFillColor};\n\t}\n\t`}),"styles"),m={parser:u,db:g,renderer:$,styles:y}}}]);